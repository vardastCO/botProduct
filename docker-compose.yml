version: '3.7'

services:
  node-app:
    user: root
    restart: always
    build:
      context: .
    ports:
      - "3002-3071:3002"
    volumes:
      - "./test:/app/test"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - postgres
    networks:
      - custom_network
    # Add a healthcheck configuration to check the memory usage
  postgres:
    deploy:
      resources:
        limits:
          cpus: '1'  # Set the CPU limit to 1 (one CPU core)
          memory: '1G'  # Set the memory limit to 1 gigabyte
    image: postgres
    environment:
      POSTGRES_USER: db
      POSTGRES_PASSWORD: root
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    networks:
      - custom_network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  memory-monitor:
    build:
      context: ./py
      dockerfile: Dockerfile
    environment:
      - BOT_TOKEN=6918624503:AAFSU4bwTBmAa2w2T7ElJ9fY4XlUA6MaQ4Q
      - CHAT_ID=1839030
    restart: always 
    volumes:
      - ./py/requirements.txt:/app/requirements.txt
      - /var/run/docker.sock:/var/run/docker.sock 
    depends_on:
      - dind  # Depends on the DinD service
  dind:
    image: docker:20
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
  storage:
    image: minio/minio
    restart: always
    ports:
      - 80:9000
      - 9090:9090
    environment:
      MINIO_ROOT_USER: ndp
      MINIO_ROOT_PASSWORD: str0ngP@ss
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9090"
    networks:
      - custom_network

volumes:
  minio-data:

networks:
  custom_network:
    external: true
